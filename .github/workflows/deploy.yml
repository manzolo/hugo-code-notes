name: Deploy Hugo Blog

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly (every Sunday at 00:00 UTC) for automatic updates

# Permissions needed for GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Cancel previous jobs if a new one is triggered
concurrency:
  group: "pages"
  cancel-in-progress: false

# Global variables
env:
  HUGO_VERSION: 0.150.1
  NODE_VERSION: 18

jobs:
  # Build and test job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: 🏗️ Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: ${{ env.HUGO_VERSION }}
          extended: true

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install markdownlint
        run: npm install -g markdownlint-cli

      - name: 🧪 Run tests
        run: |
          # Test that the site builds without errors
          hugo --buildDrafts=false --buildFuture=false --quiet
          echo "✅ Build test passed"

      - name: 🔍 Lint markdown files
        run: |
          markdownlint content/**/*.md || echo "⚠️ Markdown linting warnings"

      - name: 🔨 Build production site
        run: |
          hugo --minify --gc --baseURL "${{ steps.pages.outputs.base_url || 'https://www.manzolo.it/' }}"

      - name: 📊 Site statistics
        run: |
          echo "📊 Build Statistics:"
          echo "- Posts: $(find content -name "*.md" -type f | wc -l)"
          echo "- Build size: $(du -sh public | cut -f1)"
          echo "- Files generated: $(find public -type f | wc -l)"

      - name: 💾 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: hugo-site
          path: public/
          retention-days: 30

  # Deploy to GitHub Pages (only on main/master)
  deploy-github-pages:
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: 📥 Download artifact
        uses: actions/download-artifact@v4
        with:
          name: hugo-site
          path: public/

      - name: 🏗️ Setup Pages
        uses: actions/configure-pages@v4

      - name: 📤 Upload to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: public/

      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Deploy to Netlify (alternative/parallel)
  deploy-netlify:
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Download artifact
        uses: actions/download-artifact@v4
        with:
          name: hugo-site
          path: public/

      - name: 🚀 Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './public'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # Code quality check job
  quality-check:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔍 Lint YAML files
        uses: karancode/yamllint-github-action@master
        with:
          yamllint_file_or_dir: 'config.yml docker-compose.yml .github/workflows/'
          yamllint_strict: false

      - name: 🔍 Check broken links
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'yes'
          use-verbose-mode: 'yes'

  # Dependency update job
  dependency-update:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔄 Update Hugo version
        run: |
          LATEST_HUGO=$(curl -s https://api.github.com/repos/gohugoio/hugo/releases/latest | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/' | sed 's/v//')
          echo "Latest Hugo version: $LATEST_HUGO"
          CURRENT_HUGO=$(grep "HUGO_VERSION:" .github/workflows/deploy.yml | cut -d' ' -f2)
          if [ "$LATEST_HUGO" != "$CURRENT_HUGO" ]; then
            # Update in necessary files
            sed -i "s/HUGO_VERSION: .*/HUGO_VERSION: $LATEST_HUGO/" .github/workflows/deploy.yml
            sed -i "s/hugomods\/hugo:go-.*/hugomods\/hugo:go-$LATEST_HUGO/" docker-compose.yml Makefile
          else
            echo "Hugo is already up to date. No changes needed."
            exit 0
          fi

      - name: 📤 Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update Hugo version'
          title: 'chore: update Hugo version'
          body: |
            Automatic Hugo version update.
            
            - ⬆️ Hugo updated to the latest version
            - 🔄 Updated files: docker-compose.yml, Makefile, deploy.yml
          branch: update/hugo-version